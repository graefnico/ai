"""
Copyright (c) 2017 Nico Gr√§f (nicograef.de, github.com/nicograef)
Simple test for the genetic algorithm implementation on github.com/nicograef/ai
"""

from GeneticAlgorithm import GeneticAlgorithm

target = [
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,
    1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,
    1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,
    1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,
    1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,
    1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,
    0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,0,
    1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,
    1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,
    1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,
    1,1,1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,
    0,0,0,1,1,1,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1]

# max fitness is len(target) = 500
def fitness_function(individual):
    fitness = 0
    for i,val in enumerate(individual):
        if val == target[i]:
            fitness += 1
    return fitness

ga = GeneticAlgorithm(len(target), fitness_function, population_size=30)
while ga.getCurrentFitness() < len(target):
    ga.printCurrentFitness()
    ga.nextGeneration()

print("Solution:", ga.solutionToString())
